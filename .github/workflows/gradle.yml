name: Java CI with Gradle

on:
  push:
    branches-ignore:
    - "dependabot/**"
    tags-ignore:
    - "**"
    paths:
    - "**.java"
    - "**.json"
    - "**.yml"
    - "gradle**"
    - "*.gradle"
    - "*.accesswidener"
  pull_request:
    paths:
    - "**.java"
    - "**.json"
    - "**.yml"
    - "gradle**"
    - "*.gradle"
    - "*.accesswidener"
  workflow_dispatch:
    inputs:
      distinct_id:
        required: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:

    - name: Echo distinct ID ${{ inputs.distinct_id }}
      run: echo ${{ inputs.distinct_id }}

    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Java 21
      uses: actions/setup-java@v5
      with:
        java-version: "21"
        distribution: "microsoft"

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        build-scan-publish: true
        build-scan-terms-of-use-url: "https://gradle.com/help/legal-terms-of-use"
        build-scan-terms-of-use-agree: "yes"
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: ${{ github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/heads/1.') }}

    - name: Build
      run: ./gradlew build --stacktrace --warning-mode=fail

    - name: Upload to VirusTotal for analysis
      id: virustotal
      env:
        VIRUSTOTAL_API_KEY: ${{ secrets.VIRUSTOTAL_API_KEY }}
      if: ${{ env.VIRUSTOTAL_API_KEY }}
      uses: crazy-max/ghaction-virustotal@v4
      with:
        vt_api_key: ${{ env.VIRUSTOTAL_API_KEY }}
        files: |
          ./build/libs/*.jar
      # An error in this step means that the upload failed, not that a false
      # positive was detected.
      continue-on-error: true

    - name: Add VirusTotal links to build summary
      if: ${{ steps.virustotal.outputs.analysis }}
      run: |
        echo "<details open>" >> $GITHUB_STEP_SUMMARY
        echo "<summary>üõ°Ô∏è VirusTotal Scans</summary>" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        IFS=',' read -ra ANALYSIS <<< "${{ steps.virustotal.outputs.analysis }}"
        for i in "${ANALYSIS[@]}"; do
          filepath=${i%%=*}
          url=${i#*=}
          filename=$(basename "$filepath")
          echo "- [$filename]($url)" >> $GITHUB_STEP_SUMMARY
        done
        echo "</details>" >> $GITHUB_STEP_SUMMARY

    - name: Set up test matrix
      id: set_matrix
      run: |
        DO_LOOTR_TEST=$(grep -E '^do_lootr_test=' gradle.properties | cut -d'=' -f2)
        
        if [ "$DO_LOOTR_TEST" = "true" ]; then
          echo 'matrix={"include":[{"name":"default","task":"runClientGameTest"},{"name":"lootr","task":"runClientGameTestWithLootr"}]}' >> $GITHUB_OUTPUT
        else
          echo 'matrix={"include":[{"name":"default","task":"runClientGameTest"}]}' >> $GITHUB_OUTPUT
        fi

  test:
    name: Run ${{ matrix.name }} client gametest
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build.outputs.matrix) }}
    steps:

    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Java 21
      uses: actions/setup-java@v5
      with:
        java-version: "21"
        distribution: "microsoft"

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        build-scan-publish: true
        build-scan-terms-of-use-url: "https://gradle.com/help/legal-terms-of-use"
        build-scan-terms-of-use-agree: "yes"
        cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
        cache-read-only: ${{ github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/heads/1.') }}

    - name: Run ${{ matrix.name }} client gametest
      env:
        IMGUR_CLIENT_ID: ${{ secrets.IMGUR_CLIENT_ID }}
      run: xvfb-run --auto-servernum ./gradlew ${{ matrix.task }} --stacktrace --warning-mode=fail

    - name: Upload screenshots artifact
      uses: actions/upload-artifact@v4
      if: ${{ success() || failure() }}
      with:
        name: screenshots-${{ matrix.name }}
        path: build/run/*/screenshots
        compression-level: 0

    - name: Upload crash-reports artifact
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: crash-reports-${{ matrix.name }}
        path: build/run/*/crash-reports
